# Default use case: run on `pull_request` and check the changes don't break a downstream crate
name: Check downstream compiles

description: Patch dependent crate with upstream changes and check it builds

inputs:
  # Path to the upstream repo relative to `${{ github.workspace }}`
  upstream-path:
    description: 'path to upstream repo'
    required: true
    type: string
  # Path to the downstream repo relative to `${{ github.workspace }}`
  downstream-path:
    description: 'Path to upstream repo'
    required: true
    type: string
  # `[patch.<patch-type>]`, defaults to HTTPS URL from upstream caller repo
  patch-type:
    description: 'Patch with HTTPS, SSH, or crates.io'
    required: false
    default: 'https'
    type: string
  features:
    description: 'Features to check in addition to the default'
    required: false
    type: string

runs:
  using: "composite"
  steps: 
    - name: Set env
      run: |
        if [[ ! -z "${{ inputs.features }}" ]]; then
          FEATURES="--features ${{ inputs.features }}"
        else
          FEATURES=""
        fi
        echo "FEATURES=$FEATURES" | tee -a $GITHUB_ENV
      shell: bash
    # Assumes at least one dependency in the current workspace is used by the downstream crate
    - name: Patch Cargo.toml files in the downstream repo with all uses of the upstream-repo
      shell: bash
      working-directory: ${{ github.workspace }}/ci-workflows/crates/check-downstream-compiles
      run: |
        cargo run -- --upstream ${{ github.workspace }}/${{ inputs.upstream-path }} --downstream ${{ github.workspace }}/${{ inputs.downstream-path }} --repo ${{ github.repository }} --patch-type ${{ inputs.patch-type }}
      env:
        RUST_LOG: "debug"
    - name: Check downstream types don't break spectacularly
      shell: bash 
      working-directory: ${{ github.workspace }}/${{ inputs.downstream-path }}
      run: |
        cargo check --workspace --all-targets ${{ env.FEATURES }}
